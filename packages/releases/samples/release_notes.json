{
  "type": "runtime",
  "version": "2022.1100.0.259",
  "release_notes": [
    "<p>November will include a lot of functionality for audio, arrays, Spine, and others. Plus, it also introduces the ability for PS5 players to use their existing PS4 saves for the same game. It also fixes a number of issues to do with filters and effects, and many other bugs as well.</p>\n\n<p>See below for runtime changes/fixes since 2022.9.1 and then check <a href=\"https://gms.yoyogames.com/ReleaseNotes-NuBeta.html\" target=\"_blank\">the IDE Release Notes</a></p>\n\n\n<h2>Changes Since Beta Runtime 258</h2>\n<h3>Other Bugs Fixed</h3>\n<ul>\n\t<li>In-Game: buffer_save_async() crashes games if passed \"-1\" as the size argument</li>\n\t<li>In-Game: debug_event(\"DumpMemory\") needs the same accuracy improvements (on all targets) which were added recently for macOS IDE debugger connections</li>\n</ul>\n\n\n<h2>Beta Runtime 258</h2>\n<h3>Other Bugs Fixed</h3>\n<ul>\n\t<li>Debugger: [Mac IDE] Does not display the correct memory usage of a project in Nov22 Betas, always says 4GB in use</li>\n</ul>\n\n\n<h2>Beta Runtime 257</h2>\n<h3>Other Bugs Fixed</h3>\n<ul>\n\t<li>In-Game: Ogg thread has no exit condition and will cause the main thread to hang on game_end() in Nov22 Betas</li>\n\t<li>In-Game: [HTML5] Fixed an obfuscation issue with the keyword \"CollisionCompatibility\", which meant that the compatibility checkbox in Game Options was always ignored</li>\n\t<li>In-Game: [iOS] keyboard_string does not get cleared correctly, causing subsequent keypresses to return the first character typed</li>\n\t<li>In-Game: string_trim() functions don't always trim whitespace characters larger than 1 byte correctly in Nov22 Beta 6</li>\n\t<li>In-Game: [PS4] video_draw() and calling a YUV format video file can cause a game crash</li>\n</ul>\n\n\n<h2>Beta Runtime 256</h2>\n<h3>Added More Filter Layer Types</h3>\n<ul>\n\t<li>Old Film, Hue, Ripples, Blocks Background, Panorama Background and Parallax Background have all now been added for you to use in your games</li>\n\t<li>Also fixed an issue with the existing Boxes filter which meant it didn't work on HTML5</li>\n</ul>\n<h3>Other Bugs Fixed</h3>\n<ul>\n\t<li>Building Projects: [Android] Runner always fails Lint checks if using SDK 33 to build with</li>\n\t<li>In-Game: Audio thread is never shutdown fully on game_end() in 2022.1100 Betas [would only show up as a possible freeze when quitting or an unexpected error code in the output wiondow, etc.]</li>\n\t<li>In-Game: [Android] Videos do not play if game was built as an .aab with Dynamic Asset Delivery enabled</li>\n\t<li>In-Game: string_split() causes a crash when splitting a string containing sub-strings of different lengths</li>\n\t<li>In-Game: Very first run of a new project sometimes fails with a collision event time error in Nov22 Beta 3 [just added more logging for this intermittent issue - if you do get this, please file a ticket with your output log]</li>\n\t<li>In-Game: [HTML5] Fixes for getting and setting camera matricies [which you can now see on the public-facing GitHub for the HTML5 runner!]</li>\n</ul>\n\n\n<h2>Beta Runtime 251</h2>\n<h3>Other Bugs Fixed</h3>\n<ul>\n\t<li>Building Projects: [Windows/ HTML5] Attached project will stop building trying to load an Audio group</li>\n\t<li>In-Game: Sprites set to animate per game frame in the editor do not animate correctly in game</li>\n\t<li>In-Game: Using a function for a time source callback will cause Gx.Games and HTML5 to not function correctly</li>\n\t<li>In-Game: texturegroup_unload does not release memory on macOS VM (M1 Pro)</li>\n\t<li>In-Game: [GX] string_split function is causing gx.games target to freeze</li>\n</ul>\n\n\n<h2>Beta Runtime 248</h2>\n<h3>Enhanced String Functions</h3>\n<ul>\n\t<li>Some older string functions have been changed to allow for far more control over formatting as well as many new functions for easier string manipulation</li>\n\t<li>string(format, arg0. arg1, ...) → String  - Creates a new string from a format of type: \"string {0} with some value {1}\". Where {0} and {1} are value placeholders for the arguments</li>\n\t<li>string_ext(format, arg_array) → String - Same as above but takes an array argument</li>\n\t<li>string_trim_start(string) → String - Returns a string removing leading white space</li>\n\t<li>string_trim_end(string) → String - Returns a string removing trailing white space</li>\n\t<li>string_trim(string) → String - Returns a string removing all leading and trailing white space</li>\n\t<li>string_starts_with(string, substr) → Bool - Returns true if string starts with substring</li>\n\t<li>string_ends_with(string, substr) → Bool - Returns false is string ends with substring</li>\n\t<li>string_split(string, delimiter, remove_empty = false, max_splits = infinity) → Array - Splits the string into an array using delimeter </li>\n\t<li>string_split_ext(string, delimit_array, remove_empty = false, max_splits = infinity) → Array - Same as above but can take an array of delimeter values</li>\n\t<li>string_join(delimit, arg0, arg1, arg2, ...) → String - Using the delimeter to join all given arguments</li>\n\t<li>string_join_ext(delimit, array, offset = 0, length = infinity) → String - Same as above but takes an array</li>\n\t<li>string_concat(arg0, arg1, arg2, arg3) → String - Basically the same as string_join but using \"\" (empty string) as the delimeter</li>\n\t<li>string_concat_ext(string_array, offset = 0, length = infinity) → String - Same as above but takes a string array</li>\n\t<li>string_foreach(string, function, pos = 1, length = infinity) → Undefined - Iterates over each character executing the given callback function</li>\n\t<li>show_debug_message(format, arg0. arg1, ...) → undefined - The previous functionality will still work but now it accepts formatting: Logs a new string from a format of type: \"string {0} with some value {1}\". Where {0} and {1} are value placeholders for the followed arguments</li>\n\t<li>show_debug_message_ext(format, arg_array) → undefined - As above but with an argument array</li>\n</ul>\n\n\n<h3>Misc Changes To Be Aware Of</h3>\n<ul>\n\t<li>The Function shader_set_uniform_f_buffer has been added to allow sending a buffer direct to a shader</li>\n\t<li>The Function audio_group_get_gain() has been added to return the current gain value of a specified audio group</li>\n</ul>\n\n<h3>Bugs Fixed</h3>\n<ul>\n\t<li>In-Game: [HTML5] Project crashes when using built-in variable name in struct</li>\n\t<li>In-Game: [HTML5] Clipboard functions do not work when the game is hosted on Itch.io</li>\n\t<li>In-Game: [Mac IDE] Colour values are cleared on loading projects</li>\n\t<li>In-Game: texturegroup_unload() does not free memory correctly for dynamic texture groups or sprites created via sprte_add() on multiple target platforms</li>\n\t<li>In-Game: vertex_create_buffer_from_buffer causes batch breaks on empty buffer copied to empty buffer, unless vertex buffer is frozen</li>\n</ul>\n\n\n\n\n<h2>Beta Runtime 219</h2>\n<h3>Multi-Touch Input for GDK games</h3>\n<ul>\n\t<li>Touch inputs can now be read from devices while streaming (using Xbox Game Streaming)</li>\n\t<li>xboxone_streaming_is_enabled() - returns 1 if the game is currently being streamed, or 0 if it isn't</li>\n\t<li>xboxone_streaming_set_show_controls(enable) - Note that this overlay is always disabled if a physical controller is being used with the streaming device.</li>\n\t<li>xboxone_streaming_get_show_controls() / xboxone_streaming_set_show_controls()</li>\n\t<li>xboxone_streaming_get_info() - returns a struct containing a variety of information</li>\n</ul>\n<h3>HTML5 Step Event and Instance Creation</h3>\n<ul>\n\t<li>Step Event and Instance creation on HTML5 now has more behaviour parity with the other platforms</li>\n\t<li>The order of execution of Step events per instance is now the same order, and newly created instances step events will wait until the next frame on HTML5 to execute</li>\n\t<li>This fixes a number of projects that have had issues on HTML5 but may have a negative effect if you relied on this particular HTML5 behaviour\n</ul>\n\n<h3>Misc Changes To Be Aware Of</h3>\n<ul>\n\t<li>libvorbis error codes are now accompanied with a description - this will help with understanding some audio errors that may come up</li>\n</ul>\n\n<h3>Bugs Fixed</h3>\n<ul>\n\t<li>In-Game: [HTML5] Inconsistent behaviour of step event of newly created instances</li>\n\t<li>In-Game: [HTML5] structs report that they contain x and y variables</li>\n\t<li>In-Game: Inconsistent behaviour when requesting a track position beyond the end of a sound asset's duration.</li>\n\t<li>In-Game: The built-in variable font_texture_page_size has an odd default value (4652218415073722368)</li>\n\t<li>Output Console: Creating an audio stream with a file other than a .ogg file will produce a less than useful error</li>\n</ul>\n\n\n\n<h2>Beta Runtime 214</h2>\n<h3>Audio Filters/Effects Support</h3>\n<ul>\n\t<li>We have now added support for calling a number of new audio filters in your games</li>\n\t<li><i>audio_bus_create()</i>, <i>audio_effect_create()</i>, <i>audio_emitter_bus()</i>, and <i>audio_emitter_get_bus()</i> are all new and allow you to call your choice of the following effects:</li>\n\t<li><i>Bitcrusher</i> (which is a form of distorsion), <i>Delay</i>, <i>Gain</i>, <i>HPF2</i> (a high-pass filter), <i>LPF2</i> (a low-pass filter), and <i>Reverb1</i></li>\n</ul>\n<h3>Misc Changes To Be Aware Of</h3>\n<ul>\n\t<li>array_join() is now called array_concat() (and the old name from Beta 1 will no longer work, so you will need to edit your code accordingly)</li>\n\t<li>time_source_destroy() now takes an optional argument to destroy the whole tree at once</li>\n\t<li>matrix_transform_vertex() now can take an optional 4th argument</li>\n</ul>\n<h3>Bugs Fixed</h3>\n<ul>\n\t<li>Building Projects: Optional arguments in functions are being causing build failure</li>\n\t<li>Building Projects: YYC Build Fails To Run ++ Operator On Struct inside Ternary Condition</li>\n\t<li>Debugger: Watch values are not being displayed</li>\n\t<il>In-Game: Fix added for Rollback players joining late</li>\n\t<il>In-Game: Inconsistent behaviour of z-buffer between HTML5 and Windows</li>\n\t<li>In-Game: Instances deactivated in the same frame as a room change don't have their clean up event called</li>\n\t<li>In-Game: Int64 0 and 1 values don't work with boolean comparisons</li>\n\t<li>In-Game: layer_get_all_elements() keeps destroyed instances now causing a runtime exception</li>\n\t<li>In-Game: phy_position_x() returns different values in HTML5 and Windows</li>\n\t<li>In-Game: Spine animation events doesn't work when draw_sprite_ext() is used</li>\n\t<li>In-Game: Sprites set to animate per game frame in the editor do not animate correctly in game</li>\n\t<li>In-Game: sprite_width(0) compiles fine and causes an error at runtime</li>\n\t<li>In-Game: Strings are lost when calling array_reverse_ext on arrays that contain strings</li>\n\t<li>In-Game: Suspending a GDK game when changing rooms can cause a crash</li>\n\t<li>In-Game: variable_struct_remove() causes memory leak</li>\n\t<li>In-Game: When no initial value is provided array_reduce doesn't use the first element value and doesn't skip the first iteration</li>\n\t<li>In-Game: xboxone_check_privilege should attempt resolution when XUserCheckPrivilege() returns an \"unknown\" error</li>\n</ul>\n\n\n<h2>Beta Runtime 210</h2>\n<h3>Added More Functions For Searching/Manipulating Arrays</h3>\n<ul>\n\t<li>array_all(array, function, offset = 0, length = infinity) → Bool</li>\n\t<li>array_any(array, function, offset = 0, length = infinity) → Bool</li>\n\t<li>array_copy_while(array, function, offset = 0, length = infinity) → Array</li>\n\t<li>array_create_ext(size, function) → Array</li>\n\t<li>array_filter(array, function, offset = 0, length = infinity) → Array</li>\n\t<li>array_find_index(array, function, offset = 0, length = infinity) → Any</li>\n\t<li>array_first(array) → Real</li>\n\t<li>array_foreach(array, function, offset = 0, length = infinity) → Undefined</li>\n\t<li>array_intersection(array1, array2, ...) → Array</li>\n\t<li>array_join(array1, array2, ...) → Array</li>\n\t<li>array_last(array) → Real</li>\n\t<li>array_map(array, function, offset = 0, length = infinity) → Array</li>\n\t<li>array_reduce(array, function, init = array[offset], offset = 0, length = infinity) → Any</li>\n\t<li>array_union(array1, array2, ...) → Array</li>\n\t<li>array_unique(array, output, offset = 0, length = infinity) → Array</li>\n\t<li>All of the above functions will leave the original array(s) untouched and return you a new array of the end results of the operation; however, there are also some new <i>…_ext()</i> functions for if you do want to modify the original array:</li>\n\t<li>array_filter_ext(array, function, offset = 0, length = infinity)</li>\n\t<li>array_map_ext(array, function, offset = 0, length = infinity)</li>\n\t<li>array_unique_ext(array, offset = 0, length = infinity)</li>\n\t<li>array_reverse_ext(array, offset = 0, length = infinity)</li>\n\t<li>The return value from all of these <i>…_ext()</i> functions is just a real to give you the new size of the modified array</li>\n\t<li>More on all of these can be found in the manual, along with all the other existing array functions</li>\n</ul>\n<h3>Added More Functions For Spine</h3>\n<ul>\n\t<li>skeleton_attachment_exists() can be used to check if an attachment with the given name has already been created</li>\n\t<li>skeleton_attachment_replace() and skeleton_attachment_destroy() can now be used to modify the attachments on your skeletons</li>\n\t<li>And the existing function skeleton_attachment_create() will now return an error if you try to reuse an attachment name without destroying it first</li>\n</ul>\n<h3>Added support for reading PS4 save files in a PS5 game</h3>\n<ul>\n\t<li>Your PS5 games can now see and read PS4 saves for the same title (note that this is not supported PS5-to-PS4)</li>\n</ul>\n<h3>Misc Other Changes To Be Aware Of</h3>\n<ul>\n\t<li>In-Game: [Windows/macOS/Ubuntu/Android] Gamepad mappings library was getting quite old, so it has now been updated to the latest database release - this should fix a number of pad issues</li>\n\t<li>In-Game: CPU-side \"frustum\" culling was not being performed correctly, but has now been fixed, so if you had noticed flipped/scaled/rotated assets disappearing too soon when near the edges of the game window, this should be fixed now</li>\n\t<li>In-Game: Cleanup events are no longer repeated if using a with() to destroy an object inside a second object's Cleanup event</li>\n\t<li>In-Game: audio_sync_group_is_paused(groupName) can now be used to check if an audio sync group is paused or not</li>\n\t<li>In-Game: os_is_network_connected() has two new constants you can use (\"network_connect_active\", which is the existing behaviour and will show prompts when no connection has been found, and \"network_connect_passive\" which will not show the prompts)</li>\n\t<li>In-Game: [MacOS] Add support for window_set_cursor() to allow more cursors than just \"cr_none\" and \"cr_arrow\" (which is also \"cr_default\")</li>\n</ul>\n<h3>Bugs Fixed</h3>\n<ul>  \n\t<li>In-Game: Memory leak when comparing a variable to \"\" (an empty string)</li>\n\t<li>In-Game: Spine sprites have incorrect animation/rotation alignment even when not mixing animations</li>\n\t<li>In-Game: [Android YYC] Crashes on startup, which can be prevented by calling show_debug_message() or similar misc function before the problem call</li>\n\t<li>In-Game: [Android] Audio recorder devices are not automatically paused/freed when sending the game to the background</li>\n\t<li>In-Game: [GX.games] Music playback is slowed down when game is set to 30fps</li>\n\t<li>In-Game: [GX.games, Ubuntu] Using a font file (.ttf) from 'Included Files' isn't read and applied to text</li>\n\t<li>In-Game: [HTML5] Comparing a variable set to \"self\" against the in-built \"self\" returns that they do not match, differs from Windows</li>\n\t<li>In-Game: [HTML5] Error when calling any constructor and omitting the \"new\" keyword</li>\n\t<li>In-Game: [HTML5] Fonts do not have their texture page border setting applied correctly</li>\n\t<li>In-Game: [Switch] Some controller/gamepad functions incorrectly populate the result values</li>\n\t<li>In-Game: [Windows] Filters and Effects' alpha channel does not work properly with some effect layers</li>\n\t<li>In-Game: [Windows] PS5 DualSense gamepad gp_axisrv returns the value for the left trigger instead</li>\n\t<li>In-Game: [macOS/iOS] All layer... getter property functions will silently crash the game if passed a method as the element id</li>\n\t<li>In-Game: [Android YYC] camera_get_view_width() crashes the game, differs from VM</li>\n\t<li>In-Game: date_compare_date() and date_compare_time() always use UTC rather than the correct local timezone, can cause incorrect results</li>\n\t<li>In-Game: [Android] device_get_tilt_x/y/z() always return 0 until you pause and resume the runner</li>\n\t<li>In-Game: [Windows YYC] draw_set_colour() text is being drawn as black due to ternary operator issue in 2022.8</li>\n\t<li>In-Game: draw_sprite_general() with x/y scales set to minus values causes sprites to disappear too soon when near room edges</li>\n\t<li>In-Game: [HTML5] draw_sprite_part_ext() and draw_sprite_part() do not draw correctly</li>\n\t<li>In-Game: [HTML5] ds_grid_add() can add a \"0\" to the start of strings added to a grid</li>\n\t<li>In-Game: [iOS] gamepad_get_description() values do not update correctly when multiple devices are paired mid-game</li>\n\t<li>In-Game: [macOS YYC/iOS YYC] is_infinity() on a method silently crashes the runner</li>\n\t<li>In-Game: json_stringify() used on a Sequence Object struct only adds its \"event_\" variables to the string</li>\n\t<li>In-Game: layer_sequence_headpos() causes some assets to be briefly placed in wrong positions and then corrected</li>\n\t<li>In-Game: [HTML5] part_system_depth() throws uncaught TypeError attached project</li>\n\t<li>In-Game: rollback_define_input() reverts to default inputs after disconnection, can't be called again (and other desync issues)</li>\n\t<li>In-Game: [Windows] video_seek_to() incorrectly also restarts the video</li>\n\t<li>In-Game: [macOS] window_mouse_set() does not affect cursor position</li>\n</ul>\n"
  ]
}
